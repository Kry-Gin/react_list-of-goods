{"version":3,"sources":["App.tsx","Components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","handleReverseOrder","setState","handleOrderByAlphabet","ALPHABET","handleOrderByLength","LENGTH","handleInitialOrder","this","visibleGoods","console","log","getReorderedGoods","sort","g1","g2","localeCompare","length","reverse","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,+FCbQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SDJnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAMM,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,sBAAwB,WACtB,EAAKD,SAAS,CAAEH,SAAUT,EAASc,YAbvC,EAgBEC,oBAAsB,WACpB,EAAKH,SAAS,CAAEH,SAAUT,EAASgB,UAjBvC,EAoBEC,mBAAqB,WACnB,EAAKL,SAAS,CACZH,SAAUT,EAASU,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAjDH,SACLjB,EADK,GAGJ,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNW,EAAY,YAAOjB,GAMzB,OAFAkB,QAAQC,IAAIZ,EAAUD,GAEfW,EAsCgBG,CACnBjB,EAAiB,CAAEG,aAAYC,aAoBjC,OAjBAU,EAAaI,MAAK,SAACC,EAAIC,GACrB,OAAQhB,GACN,KAAKT,EAASc,SACZ,OAAOU,EAAGE,cAAcD,GAE1B,KAAKzB,EAASgB,OACZ,OAAOQ,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAITnB,GACFW,EAAaS,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYtB,IAAaT,EAASc,WAGtCkB,QAASd,KAAKL,sBARhB,iCAaA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYtB,IAAaT,EAASgB,SAGtCgB,QAASd,KAAKH,oBARhB,4BAaA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAfvB,IAGhBwB,QAASd,KAAKP,mBARhB,sBAaEH,GAAcC,IAAaT,EAASU,OACpC,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,mBAHhB,sBAUJ,cAAC,EAAD,CAAWf,MAAOiB,WAvG1B,GAAyBc,aEhDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3c54b0d3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './Components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component< {}, State > {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReverseOrder = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleOrderByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleOrderByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleInitialOrder = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer, { isReversed, sortType },\n    );\n\n    visibleGoods.sort((g1, g2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return g1.localeCompare(g2);\n\n        case SortType.LENGTH:\n          return g1.length - g2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.handleOrderByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.handleOrderByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': isReversed === false,\n              },\n            )}\n            onClick={this.handleReverseOrder}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleInitialOrder}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodsList goods={visibleGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li data-cy=\"Good\" key={good}>{good}</li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}